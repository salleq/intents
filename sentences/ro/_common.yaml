language: ro
responses:
  errors:
    # General errors
    no_intent: "Îmi pare rău, nu am înțeles cererea. Poți, te rog, să repeți?"
    handle_error: "Îmi pare rău, a intervenit o eroare în timpul procesării cererii"
    entity_wrong_state: "Îmi pare rău, niciun dispozitiv nu este {{ state | lower }}"
    feature_not_supported: "Îmi pare rău, niciun dispozitiv nu permite operațiunea"

    # Errors for when user is not logged in
    no_area: "Îmi pare rău, nu cunosc niciun spațiu numit {{ area }}"
    no_floor: "Îmi pare rău, nu cunosc niciun nivel numit {{ floor }}"
    no_domain: |
      {%
        set translations = {
          "button": "niciun buton",
          "camera": "nicio cameră video",
          "input_button": "niciun buton",
          "alarm_control_panel": "niciun panou de alarmă",
          "automation": "nicio automatizare",
          "fan": "niciun ventilator",
          "climate": "niciun termostat",
          "humidifier": "niciun umidificator",
          "input_boolean": "niciun comutator",
          "siren": "nicio sirenă",
          "water_heater": "niciun boiler",
          "light": "nicio lumină",
          "switch": "niciun comutator",
          "script": "niciun script",
          "remote": "nicio telecomandă",
          "lock": "nicio încuietoare",
          "vacuum": "niciun aspirator",
          "scene": "nicio scenă",
          "media_player": "niciun player media",
          "lawn_mower": "niciun robot de tuns gazonul",
          "valve": "nicio valvă"
        }
      %}
      "Îmi pare rău, nu știu să existe {{ translations[domain] }}"
    no_domain_in_area: |
      {%
        set translations = {
          "button": "niciun buton",
          "camera": "nicio cameră video",
          "input_button": "niciun buton",
          "alarm_control_panel": "niciun panou de alarmă",
          "automation": "nicio automatizare",
          "fan": "niciun ventilator",
          "climate": "niciun termostat",
          "humidifier": "niciun umidificator",
          "input_boolean": "niciun comutator",
          "siren": "nicio sirenă",
          "water_heater": "niciun boiler",
          "light": "nicio lumină",
          "switch": "niciun comutator",
          "script": "niciun script",
          "remote": "nicio telecomandă",
          "lock": "nicio încuietoare",
          "vacuum": "niciun aspirator",
          "scene": "nicio scenă",
          "media_player": "niciun player media",
          "lawn_mower": "niciun robot de tuns gazonul",
          "valve": "nicio valvă"
        }
      %}
      "Îmi pare rău, nu știu să existe {{ translations[domain] }} în spațiul {{ area }}"
    no_domain_in_floor: |
      {%
        set translations = {
          "button": "niciun buton",
          "camera": "nicio cameră video",
          "input_button": "niciun buton",
          "alarm_control_panel": "niciun panou de alarmă",
          "automation": "nicio automatizare",
          "fan": "niciun ventilator",
          "climate": "niciun termostat",
          "humidifier": "niciun umidificator",
          "input_boolean": "niciun comutator",
          "siren": "nicio sirenă",
          "water_heater": "niciun boiler",
          "light": "nicio lumină",
          "switch": "niciun comutator",
          "script": "niciun script",
          "remote": "nicio telecomandă",
          "lock": "nicio încuietoare",
          "vacuum": "niciun aspirator",
          "scene": "nicio scenă",
          "media_player": "niciun player media",
          "lawn_mower": "niciun robot de tuns gazonul",
          "valve": "nicio valvă"
        }
      %}
      "Îmi pare rău, nu știu să existe {{ translations[domain] }} la nivelul {{ floor }}"
    no_device_class: "Îmi pare rău, nu știu să existe {{ device_class }}"
    no_device_class_in_area: "Îmi pare rău, nu știu să existe {{ device_class }} în spațiul {{ area }}"
    no_device_class_in_floor: "Îmi pare rău, nu știu să existe {{ device_class }} la nivelul {{ floor }}"
    no_entity: "Îmi pare rău, nu cunosc nicio entitate numită {{ entity }}"
    no_entity_in_area: "Îmi pare rău, nu cunosc nicio entitate numită {{ entity }} în spațiul {{ area }}"
    no_entity_in_floor: "Îmi pare rău, nu cunosc nicio entitate numită {{ entity }} la nivelul {{ floor }}"

    # Errors for when user is logged in and we can give more information
    no_entity_exposed: "Îmi pare rău, mai întâi trebuie sa expui {{ entity }}"
    no_entity_in_area_exposed: "Îmi pare rău, mai întâi trebuie să expui {{ entity }} din spațiul {{ area }}"
    no_entity_in_floor_exposed: "Îmi pare rău, mai întâi trebuie să expui {{ entity }} de la nivelul {{ floor }}"
    no_domain_exposed: |
      {%
        set translations = {
          "button": "niciun buton expus",
          "camera": "nicio cameră video expusă",
          "input_button": "niciun buton expus",
          "alarm_control_panel": "niciun panou de alarmă expus",
          "automation": "nicio automatizare expusă",
          "fan": "niciun ventilator expus",
          "climate": "niciun termostat expus",
          "humidifier": "niciun umidificator expus",
          "input_boolean": "niciun comutator expus",
          "siren": "nicio sirenă expusă",
          "water_heater": "niciun boiler expus",
          "light": "nicio lumină expusă",
          "switch": "niciun comutator expus",
          "script": "niciun script expus",
          "remote": "nicio telecomandă expusă",
          "lock": "nicio încuietoare expusă",
          "vacuum": "niciun aspirator expusă",
          "scene": "nicio scenă expusă",
          "media_player": "niciun player media expus",
          "lawn_mower": "niciun robot de tuns gazonul expus",
          "valve": "nicio valvă expusă"
        }
      %}
      "Îmi pare rău, nu există {{ translations[domain] }}"
    no_domain_in_area_exposed: |
      {%
        set translations = {
          "button": "niciun buton expus",
          "camera": "nicio cameră video expusă",
          "input_button": "niciun buton expus",
          "alarm_control_panel": "niciun panou de alarmă expus",
          "automation": "nicio automatizare expusă",
          "fan": "niciun ventilator expus",
          "climate": "niciun termostat expus",
          "humidifier": "niciun umidificator expus",
          "input_boolean": "niciun comutator expus",
          "siren": "nicio sirenă expusă",
          "water_heater": "niciun boiler expus",
          "light": "nicio lumină expusă",
          "switch": "niciun comutator expus",
          "script": "niciun script expus",
          "remote": "nicio telecomandă expusă",
          "lock": "nicio încuietoare expusă",
          "vacuum": "niciun aspirator expusă",
          "scene": "nicio scenă expusă",
          "media_player": "niciun player media expus",
          "lawn_mower": "niciun robot de tuns gazonul expus",
          "valve": "nicio valvă expusă"
        }
      %}
      "Îmi pare rău, nu există {{ translations[domain] }} în spațiul {{ area }}"
    no_domain_in_floor_exposed: |
      {%
        set translations = {
          "button": "niciun buton",
          "camera": "nicio cameră video",
          "input_button": "niciun buton expus",
          "alarm_control_panel": "niciun panou de alarmă expus",
          "automation": "nicio automatizare expusă",
          "fan": "niciun ventilator expus",
          "climate": "niciun termostat expus",
          "humidifier": "niciun umidificator expus",
          "input_boolean": "niciun comutator expus",
          "siren": "nicio sirenă expusă",
          "water_heater": "niciun boiler expus",
          "light": "nicio lumină expusă",
          "switch": "niciun comutator expus",
          "script": "niciun script expus",
          "remote": "nicio telecomandă expusă",
          "lock": "nicio încuietoare expusă",
          "vacuum": "niciun aspirator expusă",
          "scene": "nicio scenă expusă",
          "media_player": "niciun player media expus",
          "lawn_mower": "niciun robot de tuns gazonul expus",
          "valve": "nicio valvă expusă"
        }
      %}
      "Îmi pare rău, nu există {{ translations[domain] }} la nivelul {{ floor }}"
    no_device_class_exposed: "Îmi pare rău, nu există dispozitive expuse de tip {{ device_class }}"
    no_device_class_in_area_exposed: "Îmi pare rău, nu există dispozitive expuse de tip {{ device_class }} în spațiul {{ area }}"
    no_device_class_in_floor_exposed: "Îmi pare rău, nu există dispozitive expuse de tip {{ device_class }} la nivelul {{ floor }}"

    # Used when multiple (exposed) devices have the same name
    duplicate_entities: "Îmi pare rău, există mai multe entități numite {{ entity }}"
    duplicate_entities_in_area: "Îmi pare rău, există mai multe entități numite {{ entity }} în spațiul {{ area }}"
    duplicate_entities_in_floor: "Îmi pare rău, există mai multe entități numite {{ entity }} la nivelul {{ floor }}"

    # Errors for timers
    timer_not_found: "Îmi pare rău, nu am găsit acel temporizator"
    multiple_timers_matched: "Îmi pare rău, nu pot opera cu mai multe temporizatoare deodată"
    no_timer_support: "Îmi pare rău, acest dispozitiv nu admite temporizatoare"
lists:
  # Attributes
  color:
    values:
      - in: "alb"
        out: "white"
      - in: "negru"
        out: "black"
      - in: "ro(ș|s)u"
        out: "red"
      - in: "(portocaliu|oranj)"
        out: "orange"
      - in: "galben"
        out: "yellow"
      - in: "verde"
        out: "green"
      - in: "(albastru|bleu)"
        out: "blue"
      - in: "(lila|violet|purpuriu|mov)"
        out: "purple"
      - in: "maro"
        out: "brown"
  brightness:
    range:
      type: "percentage"
      from: 0
      to: 100
  brightness_min_max:
    values:
      - in: "<maximum>"
        out: 100
      - in: "<jumatate>"
        out: 50
      - in: "<minimum>"
        out: 1
  temperature:
    range:
      type: "temperature"
      from: -100
      to: 100

  # Generic domain
  on_off_states_singular:
    values:
      - in: "<pornit>"
        out: "on"
      - in: "<oprit>"
        out: "off"
  on_off_states_plural:
    values:
      - in: "<pornite>"
        out: "on"
      - in: "<oprite>"
        out: "off"
  on_off_domains_singular:
    values:
      - in: "<lumina>"
        out: "light"
      - in: "<ventilatorul>"
        out: "fan"
      - in: "<intrerupatorul>"
        out: "switch"
  on_off_domains_plural:
    values:
      - in: "<luminile>"
        out: "light"
      - in: "<ventilatoarele>"
        out: "fan"
      - in: "<intrerupatoarele>"
        out: "switch"

  # Cover domain
  cover_states_singular:
    values:
      - in: "<deschis>"
        out: "open"
      - in: "<inchis>"
        out: "closed"
      - in: "(î|i)n curs de (deschidere|ridicare)"
        out: "opening"
      - in: "(î|i)n curs de (inchidere|coborâre)"
        out: "closing"
  cover_states_plural:
    values:
      - in: "<deschise>"
        out: "open"
      - in: "<inchise>"
        out: "closed"
      - in: "(î|i)n curs de (deschidere|ridicare)"
        out: "opening"
      - in: "(î|i)n curs de (inchidere|coborâre)"
        out: "closing"
  cover_classes_singular:
    values:
      - in: "copertin(ă|a)"
        out: "awning"
      - in: "jaluzea[ua]"
        out: "blind"
      - in: "perdea[ua]"
        out: "curtain"
      - in: "<usa>"
        out: "door"
      - in: "u(ș|s)a (de la garaj|garajului)"
        out: "garage"
      - in: "<poarta>"
        out: "gate"
      - in: "draperi(e|a)"
        out: "shade"
      - in: "(rulou[l]|oblon[ul])"
        out: "shutter"
      - in: "<fereastra>"
        out: "window"
  cover_classes_plural:
    values:
      - in: "copertine[le]"
        out: "awning"
      - in: "jaluzele[le]"
        out: "blind"
      - in: "perdele[le]"
        out: "curtain"
      - in: "<usile>"
        out: "door"
      - in: "u(ș|s)ile (de la garaj|garajului)"
        out: "garage"
      - in: "<portile>"
        out: "gate"
      - in: "draperii[le]"
        out: "shade"
      - in: "(rulouri[le]|obloane[le])"
        out: "shutter"
      - in: "<ferestrele>"
        out: "window"

  # Lock domain
  lock_states_singular:
    values:
      - in: "<incuiat>"
        out: "locked"
      - in: "<descuiat>"
        out: "unlocked"
  lock_states_plural:
    values:
      - in: "<incuiate>"
        out: "locked"
      - in: "<descuiate>"
        out: "unlocked"

  # Binary sensor domain

  bs_detection_states_singular:
    values:
      - in: "<detectat>"
        out: "on"
      - in: "<nedetectat>"
        out: "off"
  bs_detection_states_plural:
    values:
      - in: "<detectate>"
        out: "on"
      - in: "<nedetectate>"
        out: "off"
  bs_detection_states_active:
    values:
      - in: "(detecteaz(ă|a)|simt[e]|indic(ă|a))"
        out: "on"
      - in: "a[u] (detectat|sim(ț|t)it|indicat)"
        out: "on"
      - in: "nu (detecteaz(ă|a)|simt[e]|indic(ă|a))"
        out: "off"
      - in: "nu a[u] (detectat|sim(ț|t)it|indicat)"
        out: "off"

  bs_battery_states_singular:
    values:
      - in: "descarcat(ă|a)"
        out: "on"
      - in: "(normal(ă|a)|încărcată|incarcata)"
        out: "off"
  bs_battery_states_plural:
    values:
      - in: "descarcate"
        out: "on"
      - in: "(normale|(î|i)nc(ă|a)rcate)"
        out: "off"

  bs_battery_charging_states:
    values:
      - in: "(în curs de încărcare|in curs de incarcare)"
        out: "on"
      - in: "la (încă|inca)rca(re|t)"
        out: "on"
      - in: "(în curs de descărcare|in curs de descarcare)"
        out: "off"
  bs_battery_charging_states_passive:
    values:
      - in: "se (încarcă|incarca)"
        out: "on"
      - in: "se descarc(ă|a)"
        out: "off"

  bs_cold_states:
    values:
      - in: "<frig>"
        out: "on"
      - in: "normal"
        out: "off"
  bs_cold_states_singular:
    values:
      - in: "(rece|înghețat[ă]|inghetat[a])"
        out: "on"
      - in: "normal[(ă|a)]"
        out: "off"
  bs_cold_states_plural:
    values:
      - in: "(reci|îngheța(ți|te)|ingheta(ti|te))"
        out: "on"
      - in: "normal(i|e)"
        out: "off"

  bs_connectivity_states_singular:
    values:
      - in: "conectat[(ă|a)]"
        out: "on"
      - in: "deconectat[(ă|a)]"
        out: "off"
  bs_connectivity_states_plural:
    values:
      - in: "conecta((ț|t)i|te)"
        out: "on"
      - in: "deconecta((ț|t)i|te)"
        out: "off"

  bs_door_states_singular:
    values:
      - in: "<deschis>"
        out: "on"
      - in: "<inchis>"
        out: "off"
  bs_door_states_plural:
    values:
      - in: "<deschise>"
        out: "on"
      - in: "<inchise>"
        out: "off"
  bs_door_states_passive:
    values:
      - in: "s-a[u] deschis"
        out: "on"
      - in: "a[u] fost deschis[(ă|a|e)]"
        out: "on"
      - in: "s-a[u] (î|i)nchis"
        out: "off"
      - in: "a[u] fost (închis[(ă|e)]|inchis[(a|e)])"
        out: "off"
  bs_door_states_active:
    values:
      - in: "am deschis"
        out: "on"
      - in: "a deschis cineva"
        out: "on"
      - in: "am (î|i)nchis"
        out: "off"
      - in: "a (î|i)nchis cineva"
        out: "off"

  bs_heat_states:
    values:
      - in: "<cald>"
        out: "on"
      - in: "normal"
        out: "off"
  bs_heat_states_singular:
    values:
      - in: "(cald[(ă|a)]|fierbinte|(î|i)ncins)"
        out: "on"
      - in: "normal[(ă|a)]"
        out: "off"
  bs_heat_states_plural:
    values:
      - in: "(cal(zi|de)|fierbin(ț|t)i|încin(și|se)|incin(si|se))"
        out: "on"
      - in: "normal(i|e)"
        out: "off"

  bs_lock_states_singular:
    values:
      - in: "<descuiat>"
        out: "on"
      - in: "<incuiat>"
        out: "off"
  bs_lock_states_plural:
    values:
      - in: "<descuiate>"
        out: "on"
      - in: "<incuiate>"
        out: "off"
  bs_lock_states_passive:
    values:
      - in: "s-a[u] descuiat"
        out: "on"
      - in: "s-a[u] (î|i)ncuiat"
        out: "off"
  bs_lock_states_active:
    values:
      - in: "am descuiat"
        out: "on"
      - in: "a descuiat cineva"
        out: "on"
      - in: "am (î|i)ncuiat"
        out: "off"
      - in: "a (î|i)ncuiat cineva"
        out: "off"

  bs_moisture_states_singular:
    values:
      - in: "u[me]d[(ă|a)]"
        out: "on"
      - in: "inundat(ă|a)"
        out: "on"
      - in: "uscat[(ă|a)]"
        out: "off"
  bs_moisture_states_plural:
    values:
      - in: "u[me](zi|de)"
        out: "on"
      - in: "inunda((ț|t)i|te)"
        out: "on"
      - in: "usca((ț|t)i|te)"
        out: "off"
  bs_moisture_states_passive:
    values:
      - in: "s-a[u] (udat|umezit)"
        out: "on"
      - in: "s-a[u] inundat"
        out: "on"
      - in: "s-a[u] uscat"
        out: "off"

  bs_plug_states_singular:
    values:
      - in: "(conectat[ă][ la priză]|[(băgat[ă]|introdus[ă]) ]<in> priză)"
        out: "on"
      - in: "(conectat[a][ la priza]|[(bagat[a]|introdus[a]) ]<in> priza)"
        out: "on"
      - in: "(deconectat[ă][ de la priză]|(scos|scoasă) din priză)"
        out: "off"
      - in: "(deconectat[a][ de la priza]|(scos|scoasa) din priza)"
        out: "off"
  bs_plug_states_plural:
    values:
      - in: "(conecta(ți|te)[ la priză]|[(băga(ți|te)|introdu(și|se)) ]<in> priză)"
        out: "on"
      - in: "(conecta(ti|te)[ la priza]|[(baga(ti|te)|introdu(si|se)) ]<in> priza)"
        out: "on"
      - in: "(deconecta(ți|te)[ de la priză]|(scoși|scoase) din priză)"
        out: "off"
      - in: "(deconecta(ti|te)[ de la priza]|(scosi|scoase) din priza)"
        out: "off"

  bs_power_states_singular:
    values:
      - in: "sub tensiune"
        out: "on"
      - in: "(alimentat[ă]|[(băgat[ă]|introdus[ă]) ]<in> priză)"
        out: "on"
      - in: "(alimentat[a]|[(bagat[a]|introdus[a]) ]<in> priza)"
        out: "on"
      - in: "nealimentat[ă]"
        out: "off"
      - in: "(scos|scoasă) din priză"
        out: "off"
      - in: "(scos|scoasa) din priza"
        out: "off"
  bs_power_states_plural:
    values:
      - in: "sub tensiune"
        out: "on"
      - in: "(alimenta(ți|te)|[(băga(ți|te)|introdu(și|se)) ]<in> priză)"
        out: "on"
      - in: "(alimenta(ti|te)|[(baga(ti|te)|introdu(si|se)) ]<in> priza)"
        out: "on"
      - in: "nealimentat((ț|t)i|te)"
        out: "off"
      - in: "(scoși|scoase) din priză"
        out: "off"
      - in: "(scosi|scoase) din priza"
        out: "off"

  bs_presence_states:
    values:
      - in: "(acas(ă|a)|prezent[(ă|a)])"
        out: "on"
      - in: "(plecat[(ă|a)]|absent[(ă|a)])"
        out: "off"

  bs_running_states_singular:
    values:
      - in: "pornit[(ă|a)]"
        out: "on"
      - in: "în [curs de ](rulare|desfășurare)"
        out: "on"
      - in: "in [curs de ](rulare|desfasurare)"
        out: "on"
      - in: "((î|i)n repaus|oprit[(ă|a)])"
        out: "off"
  bs_running_states_plural:
    values:
      - in: "porni((ț|t)i|te)"
        out: "on"
      - in: "în [curs de ](rulare|desfășurare)"
        out: "on"
      - in: "in [curs de ](rulare|desfasurare)"
        out: "on"
      - in: "((î|i)n repaus|opri((ț|t)i|te))"
        out: "off"
  bs_running_states_active:
    values:
      - in: "ruleaz(ă|a)"
        out: "on"
      - in: "s-a[u] oprit"
        out: "off"

  bs_safety_states:
    values:
      - in: "nesigur"
        out: "on"
      - in: "sigur"
        out: "off"

  bs_tamper_states:
    values:
      - in: "vandalizat"
        out: "on"
      - in: "(normal|nevandalizat)"
        out: "off"

  bs_vibration_states_active:
    values:
      - in: "vibreaz(ă|a)"
        out: "on"
      - in: "nu vibreaz(ă|a)"
        out: "off"

  # Wildcards
  shopping_list_item:
    wildcard: true

  zone:
    wildcard: true

  search_query:
    wildcard: true

  position:
    range:
      type: "percentage"
      from: 0
      to: 100

  volume:
    range:
      type: "percentage"
      from: 0
      to: 100

  timer_seconds:
    range:
      from: 1
      to: 100
  timer_minutes:
    range:
      from: 1
      to: 100
  timer_hours:
    range:
      from: 1
      to: 100
  timer_name:
    wildcard: true
  timer_command:
    wildcard: true

  message:
    wildcard: true

  volume_step_up:
    range:
      type: percentage
      from: 0
      to: 100

  volume_step_down:
    range:
      type: percentage
      from: 0
      to: 100
      multiplier: -1

  fan_speed:
    range:
      type: "percentage"
      from: 0
      to: 100

  media_class:
    values:
      - in: "(artist[(ul|a)]|forma(ț|t)i(e|a)|trup(ă|a))"
        out: "artist"
      - in: "album[ul]"
        out: "album"
      - in: "(pies(ă|a)|melodi(e|a)|c(â|a)ntec[ul])"
        out: "track"
      - in: "(playlist[[-]ul]|list(ă|a))"
        out: "playlist"
      - in: "podcast[[-]ul]"
        out: "podcast"
      - in: "film[ul]"
        out: "movie"
      - in: "serial[ul]"
        out: "tv_show"

expansion_rules:
  # Placeholders
  area: "{area}"
  floor: "[(etajul|nivelul) ]{floor}"
  area_floor: "(<area>|<floor>)"
  brightness: "{brightness}[<la_suta>]"
  temperature: "{temperature}[ (°|grad|[de ]grade)]"
  position: "{position}[<la_suta>]"
  volume: "{volume:volume_level}[<la_suta>]"
  fan_speed: "{fan_speed:percentage}[<la_suta>]"
  name: "({name})"
  class_singular: "<class>"
  class_plural: "<class>"
  state: "{on_off_states_singular:state}"
  state_singular: "<state>"
  state_plural: "<state>"
  object_singular: "<object>"
  object_plural: "<object>"
  verb_state: "<este> <state_singular>"

  # Quantities
  maximum: "(maxim[(ă|a|um)][ posibil[(ă|a)]])"
  jumatate: "(jum(ă|a)tate|jumate)"
  minimum: "(minim[(ă|a|um)][ posibil[(ă|a)]])"
  toti: "(toate|to(ț|t)i)"
  la_suta: "([ ]%| la sut(ă|a)| [de ]procent[e])"
  temporar: "(temporar|pu(ț|t)in|un pic|pentru moment|deocamdat(ă|a))"

  # Timers
  ore: "([de ]ore|or(ă|a))"
  minute: "([de ]minute|minut)"
  secunde: "([de ]secunde|secund(ă|a))"
  timer_duration_seconds: "{timer_seconds:seconds} <secunde>"
  timer_duration_minutes: "{timer_minutes:minutes} <minute>[ [(ș|s)i ]{timer_seconds:seconds} <secunde>]"
  timer_duration_hours: "{timer_hours:hours} <ore>[ [(ș|s)i ]{timer_minutes:minutes} <minute>][ [(ș|s)i ]{timer_seconds:seconds} <secunde>]"
  timer_duration: "<timer_duration_seconds>|<timer_duration_minutes>|<timer_duration_hours>"

  timer_start_seconds: "{timer_seconds:start_seconds} <secunde>"
  timer_start_minutes: "{timer_minutes:start_minutes} <minute>[ [(ș|s)i ]{timer_seconds:start_seconds} <secunde>]"
  timer_start_hours: "{timer_hours:start_hours} <ore>[ [(ș|s)i ]{timer_minutes:start_minutes} <minute>][ [(ș|s)i ]{timer_seconds:start_seconds} <secunde>]"
  timer_start: "<timer_start_seconds>|<timer_start_minutes>|<timer_start_hours>"

  # Verbs
  este: "e[ste]"
  exista: "(<este>|exist(ă|a))"
  exista_vreun: "<exista> <vreun>"
  porneste: "(start|porne(ș|s)te|deschide|aprinde|activeaz(ă|a))"
  opreste: "(stop|opre(ș|s)te|(î|i)nchide|stinge|dezactiveaz(ă|a))"
  porneste_timer: "(start|porne(ș|s)te|activeaz(ă|a))"
  opreste_timer: "(stop|opre(ș|s)te|dezactiveaz(ă|a)|anuleaz(ă|a))"
  reia_timer: "(re<porneste_timer>|reia)"
  seteaza: "(seteaz(ă|a)|pune|a[d]justeaz(ă|a)|schimb(ă|a)|modific(ă|a))"
  deschide: "(deschide|ridic(ă|a))"
  inchide: "((î|i)nchide|coboar(ă|a))"
  ruleaza: "(ruleaz(ă|a)|start|porne(ș|s)te|activeaz(ă|a))"
  aspira: "(aspir(ă|a)|curăță|curata|d(ă|a) cu aspiratorul)"
  modifica_temperatura: "(încălzește|incalzeste|răcește|raceste)"
  reda: "(pune|red(ă|a))"

  # Questions
  cate: "(c(â|a)te|c(âț|at)i)"
  cat_quant: "(c(â|a)t)"
  cat: "(<cat_quant>|cum)"
  care: "(care|ce)"

  # Prepositions
  in: "((î|i)n)"
  din: "(din|(î|i)n|pentru|[de ]la|[de ]pe|de)" # used particularly for areas
  la: "(la|(î|i)n)" # used particularly for zones
  pana_la: "([p(ână|ana) ]la)" # used particularly for quantity targets
  de: "([(î|i)n valoare ]de|pentru)" # used for quantities
  pe: "(pe|cu)" # used for "casting" intents on devices/entities

  # Adjectives
  pornit: "(pornit[(ă|a)]|deschis[(ă|a)]|aprins[(ă|a)]|activat[(ă|a)])"
  pornite: "(porni((ț|t)i|te)|deschi((ș|s)i|se)|aprin((ș|s)i|se)|activa((ț|t)i|te))"
  oprit: "(oprit[(ă|a)]|închis[ă]|inchis[a]|stins[(ă|a)]|dezactivat[(ă|a)])"
  oprite: "(opri((ț|t)i|te)|închi(și|se)|inchi(si|se)|stin((ș|s)i|se)|dezactiva((ț|t)i|te))"
  deschis: "(deschis[(ă|a)]|ridicat[(ă|a)])"
  deschise: "(deschi((ș|s)i|se)|ridica((ț|t)i|te))"
  inchis: "(închis[ă]|inchis[a]|coborât[ă]|coborat[a])"
  inchise: "(închi(și|se)|inchi(si|se)|coborâ(ți|te)|cobora(ti|te))"
  detectat: "(detectat[(ă|a)]|prezent[(ă|a)]|observabil[(ă|a)])"
  detectate: "(detecta((ț|t)i|te)|prezen((ț|t)i|te)|observabil(i|e))"
  nedetectat: "(nedetectat[(ă|a)]|absent[(ă|a)]|neobservabil[(ă|a)]|liber[(ă|a)])"
  nedetectate: "(nedetecta((ț|t)i|te)|absen((ț|t)i|te)|neobservabil(i|e)|liber(i|e))"
  descuiat: "descuiat[(ă|a)]"
  descuiate: "descuia((ț|t)i|te)"
  incuiat: "încuiat[ă]|incuiat[a]"
  incuiate: "încuia(ți|te)|incuia(ti|te)"
  cald: "(cald|căldură|caldura|fierbinte|(î|i)ncins)"
  frig: "(frig|rece|r(ă|a)coare)"
  cald_frig: "(<cald>|<frig>)"

  # Domains
  lumina: "(lumin(ă|a)|bec[ul])"
  luminile: "(lumini[le]|becuri[le])"
  ventilatorul: "(ventilator[ul]|aerisire[a])"
  ventilatorului: "(ventilatorului|aerisirii)"
  ventilatoarele: "(ventilatoare[le]|aerisiri[le])"
  ventilatoarelor: "(ventilatoarelor|aerisirilor)"
  intrerupatorul: "(întrerupător[ul]|intrerupator[ul]|comutator[ul])"
  intrerupatoarele: "(întrerupătoare[le]|intrerupatoare[le]|comutatoare[le])"
  temporizatorul: "(un temporizator|temporizator[ul]|o temporizare|temporizare[a]|un cronometru|cronometru[l])"
  temporizatorului: "(temporizatorului|temporiz(ă|a)rii|cronometrului)"

  # Attributes
  luminozitatea: "(luminozitate[a])"
  culoarea: "(culoare[a])"
  temperatura: "(temperatur(ă|a))"
  pozitia: "(pozi(t|ț)i(e|a))"
  volumul: "(volum[ul])"
  temperatura_aerului: "<temperatura> [aerului]"
  viteza: "(vitez(ă|a))"

  # Device classes
  dispozitiv: "(dispozitiv[ul]|senzor[ul]|entitate[a]|obiect[ul])"
  dispozitive: "(dispozitive[le]|senzori[i]|entit(ăț|at)i[le]|obiecte[le])"
  fereastra: "(fereastr(ă|a)|geam[ul])"
  ferestrele: "(ferestre[le]|geamuri[le])"
  usa: "u(ș(ă|a)|sa)"
  usile: "u(ș|s)i[le]"
  poarta: "poart(ă|a)"
  portile: "por(ț|t)i[le]"
  incuietoarea: "((î|i)ncuietoare[a]|lac(ă|a)t[ul]|yal(ă|a)|broasc(ă|a))"
  incuietorile: "((î|i)ncuietori[le]|lac(ă|a)te[le]|yale[le]|broa(ș|s)te[le])"

  # Other
  vreun: "(vre(o|un))"
  din_zona: "[<din>] <area>"
  din_zona_etajul: "[<din>] <area_floor>"
  de_aici: "[de] aici"
  urmatorul: "(urm(a|ă)to(are[a]|r[ul]))"
  precedentul: "(precedent(a|ă|[ul])|anterio(ar(ă|a)|r[ul]))"
  numit: "(numit[(ă|a)]|cu numele|pe nume|intitulat[(ă|a)])"

  # Sentences
  suspenda_timer: "((opre(ș|s)te|dezactiveaz(ă|a)) <temporar> <object>|suspend(ă|a) <object>|pune [<temporar> ][pe ]pauz(ă|a) [la ]<object>)"
  adauga_amount_la_complement: "(adaug(ă|a) (<amount>;<la> <object>)|(cre(ș|s)te|m(ăreș|ares)te) (cu <amount>;<object>))"
  scade_amount_din_complement: "(scade (<amount>;<din> <object>)|(mic(șorează|soreaza)|redu) (cu <amount>;<object>))"

  name_dinZona_verbState: "(<name>[ <din_zona>]; <verb_state>)"
  name_dinZona_este_state: "(<name>[ <din_zona>]; (<este> <state_singular>|sunt <state_plural>))"
  name_class_dinZona_verbState: "([<class>[ <din>] ]<name>[ <din_zona>]; <verb_state>)"
  name_class_dinZona_este_state_singular: "([<class_singular>[ <din>] ]<name>[ <din_zona>]; <este> <state_singular>)"
  name_class_dinZona_este_state_plural: "([<class_plural>[ <din>] ]<name>[ <din_zona>]; sunt <state_plural>)"
  name_class_dinZona_este_state: "(<name_class_dinZona_este_state_singular>|<name_class_dinZona_este_state_plural>)"
  name_detecteaza_object_in_zona: "(({bs_detection_states_active:state}; <name>[ <din_zona>]) <object>|((<name>; {bs_detection_states_active:state}) <object>|{bs_detection_states_active:state} <object> <name>)[ <din_zona>])"
  name_detecteaza_object_in_zona_passive: "(<este> {bs_detection_states_singular:state} <object_singular>|sunt {bs_detection_states_plural:state} <object_plural>) [(<in>|de[ c(ă|a)tre]) ]<name>[ <din_zona>]"

  exista_class_state_in_zona: "(<exista> ([<vreun> ]<class_singular>;<state_singular>;[<din_zona>])|(sunt|exist(ă|a)) (<class_plural>;<state_plural>;[<din_zona>]))"
  exista_class_care_verbState_in_zona: "(<exista> ([<vreun> ]<class_singular>;[care ]<verb_state>;[<din_zona>])|(sunt|exist(ă|a)) (<class_plural>;[care ]<verb_state>;[<din_zona>]))"
  exista_object_detectat_in_zona_passive: "(<exista> ({bs_detection_states_singular:state};[<vreun> ]<object_singular>)|sunt ({bs_detection_states_plural:state}; <object_plural>))[ <din_zona>]"

  toate_class_sunt_state_in_zona: "(sunt ([<toti> ]<class_plural>;<state_plural>;[<din_zona>])|[<toti> ]<class_plural> (sunt <state_plural>;[<din_zona>]))"
  toate_class_verbState_in_zona: "([<toti> ]<class_plural>;<verb_state>;[<din_zona>])"

  care_class_este_state_in_zona: "(<care> (<class_singular> <este> <state_singular>|<class_plural> sunt <state_plural>)[ <din_zona>]|<care> (<class_singular> <din_zona> <este> <state_singular>|<class_plural> <din_zona> sunt <state_plural>))"
  care_class_verbState_in_zona: "<care> (<class_singular>|<class_plural>) (<verb_state>;[<din_zona>])"
  care_detecteaza_object_in_zona: "(cine|<care> (<dispozitiv>|<dispozitive>)) ({bs_detection_states_active:state} <object>;[<din_zona>])"

  cate_class_sunt_state_in_zona: "<cate> <class_plural> ((sunt;<state_plural>);[<din_zona>])"
  cate_class_verbState_in_zona: "<cate> <class_plural> (<verb_state>;[<din_zona>])"
  cate_detecteaza_object_in_zona: "<cate> <dispozitive> ({bs_detection_states_active:state} <object>;[<din_zona>])"

  ce_class_indica_name_in_zona: "((ce|cât[ă]|cat[a]) <class_singular> (indic(ă|a)|m(ăsoară|asoara)|arat(ă|a)|are) <name>[ <din_zona>]|(<care>|<cat>) <este> <class_singular> ((indicat[(ă|a)]|arătat[ă]|aratat[a]|măsurat[ă]|masurat[a]) de[ c(ă|a)tre]|(a[l][ lui]|lui)) <name>[ <din_zona>])"
skip_words:
  - "mulțumesc"
  - "multumesc"
  - "te rog"
  - "te rog frumos"
  - "merci"
  - "mersi"
